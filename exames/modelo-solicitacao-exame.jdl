entity Exame {
nome String required
nomeUsual String
sigla String required
ativo Boolean required
impressao Boolean required
consisteInterfaceamento Boolean required
anexaDocumentos Boolean required
}

entity Material {
nome String required
ativo Boolean required
coletavel Boolean required
exigeInformacao Boolean required
urina Boolean required
}

entity MaterialDeExame {
nome String required
ativo Boolean required
npo Boolean
jejum Boolean
exigePreparo Boolean
exigeDieta Boolean
informaNumeroDeColetas Boolean
geraItemDeSolicitacao Boolean
exigeIntervaloDeColeta Boolean
exigeRegiaoAnatomica Boolean
ingestaoDeMedicamento Boolean
dependenteDeExame Boolean
analisadoPelaCII Boolean
interesseDaCOMEDI Boolean
exigeImpressao Boolean
apareceResultado Boolean
contaCelulas Boolean
limiteDeSolicitacao Boolean
formaDeRespiracao Boolean
automatico Boolean
exigeDadosComplementares Boolean
natureza String required
sumario String required
tempoJejum Integer
intervaloMinimo Integer
unidadeDeTempo String
validade Integer
agendamentoMinimo Integer
tempoLimiteDaSolicitacao Integer
unidadeDeTempoDaSolicitacao String
numeroDeAmostras Integer
numeroDeAmostrasPadrao Integer
diasLimiteDefault Integer
tempoLimiteDefault Integer
numeroDeAmostrarPorIntervalo Integer
tempoLimiteDeAmostraPorIntervalo Integer
unidadeLimiteDeTempoDoPeriodo String
permiteSolicitacaoPosAlta Boolean required
tempoPermitidoParaSolicitarPosAlta Integer
tempoPermitidoParaSolicitarPosAltaPelasAreasExecutoras Integer
cartaDeColeta String
laboratoriaTercerizado Boolean
naoCancelaExamaAposAlta Boolean

}

entity Recomendacao {
descricao String required
avisoResponsavel Boolean required
responsavel Responsavel
abrangencia Abrangencia
}

entity Recipiente {
nome String required
anticoagulante Boolean required
ativo Boolean required
}

entity Anticoagulante {
nome String required
ativo Boolean required
}

entity AmostraDeMaterial {
nome String required
origem OrigemTipoAmostra required
numeroDeAmostras Integer required
volumeDaAmostra Integer
unidadeDeMedida UnidadeDeMedida required
responsavel Responsavel required
congelado Boolean required
unidadeFuncionalId Integer
}

entity ItemSolicitacaoExame {
urgente Boolean required
dataProgramada LocalDate required
situacao Situacao required
}

entity SolicitacaoExame {
id Integer required
infoClinica String required

usoAntimicrobianos24h Boolean required
pedidoPrimeiroExame Boolean required
}

entity Sinonimo {
nome String required
situacao Boolean
}

entity GrupoAgendamentoExame {
nome String required
codigo Integer required
agendarEmConjunto Boolean
calcularOcupacao Boolean
ativo Boolean required
}

entity GradeDeAgendamento {
unidadeExecutoraId Integer required
responsavelId Integer
ativo Boolean required
}

entity HorarioAgendado {
horaInicio Instant required
horaFim Instant
numeroDeHorarios Integer
dia Dia required
duracao Duration required
ativo Boolean required
exclusivo Boolean required
}

entity HorarioLivre {
dataHoraInicio LocalDate required
dataHoraFim LocalDate required
ocupado Boolean required
}

entity Sala {
codigoDaSala Integer required
identificacaoDaSala String required
locacaoDaSala String required
ativo Boolean required
unidadeExecutoraId Integer
}

entity TipoDeMarcacao {
tipoDeMarcacaoNome String
ativo Boolean required
}

enum Dia {
DOMINGO,
SEGUNDA_FEIRA,
TERCA_FEIRA,
QUARTA_FEIRA,
QUINTA_FEIRA,
SEXTA_FEIRA,
SABADO
}

enum OrigemTipoAmostra {
NASCIMENTO, AMBULATORIO, INTERNACAO, URGENCIA, PACIENTE, DOACAO, HOSPITAL, CIRURGIA
}

enum Responsavel {
COLETADOR, SOLICITANTE, PACIENTE
}

enum Abrangencia {
AMBULATORIO, INTERNACAO, AMBOS
}

enum Situacao {
A_COLETAR, AREA_EXECUTORA, COLETADO
}

enum UnidadeDeMedida {
	MILILITRO, FRASCO
}

relationship OneToMany {
Material{material(nome)} to Recomendacao,
SolicitacaoExame{solicitacaoExame(infoClinica)} to ItemSolicitacaoExame
GradeDeAgendamento{gradeHorario(grade)} to HorarioAgendado
HorarioAgendado{horarioAgendadoLivre(dia)} to HorarioLivre
}

relationship ManyToOne {
GradeDeAgendamento{exameGrade(nome)} to Exame
GradeDeAgendamento{grupoGrade(nome)} to GrupoAgendamentoExame
GradeDeAgendamento{salaGrade(identificacaoDaSala)} to Sala
HorarioAgendado{tipoHorario(tipoDeMarcacao)} to TipoDeMarcacao
}

relationship ManyToOne {
MaterialDeExame{amostra(nome)} to AmostraDeMaterial
MaterialDeExame{material(nome)} to Material,
Exame{materialExame(nome)} to MaterialDeExame,
Sinonimo{sinonimo(nome)} to Exame,
ItemSolicitacaoExame{itemSolicitacaoExame(situacao)} to Exame,
AmostraDeMaterial{amostraRecipiente(nome)} to Recipiente
AmostraDeMaterial{amostraAnticoagulante(nome)} to Anticoagulante
AmostraDeMaterial{amostraMaterial(nome)} to Material
}

relationship ManyToMany {
GrupoAgendamentoExame {Exame(nome)} to Exame {grupoAgendamentoExame(nome)}
}

dto * with mapstruct
paginate * with pagination
service * with serviceClass
search * with elasticsearch
skipClient *
