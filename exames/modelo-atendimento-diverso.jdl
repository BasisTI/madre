entity AtendimentoDiverso {
codigo Integer required
unidadeExecutoraId Integer required
origemAmostra OrigemAmostra
tipoAmostra TipoAmostra
identificacao String required
dataSoro LocalDate required
material String required
especialidadeId Integer required
centroAtividadeId Integer required
dataNascimento LocalDate required
sexo Sexo
}


entity LaboratorioExterno {
codigo Integer required
nome String required
sigla String required
endereco String required
municipio String required
cep Integer required
telefone Integer required
fax Integer required
email String required
cgc String required
codigoConvenio String required
codigoPlano String required
convenioPlano ConvenioPlano
formaEnvio FormaEnvio
}

entity ControleQualidade {
codigo Integer required
material String required
codigoConvenio String required
codigoPlano String required
convenioPlano ConvenioPlano
}

entity Cadaver {
codigo Integer required
nome String required
dataNascimento LocalDate required
raca Raca
grupoSanguineo GrupoSanguineo
dataRemocao LocalDate required
causaObito String required
realizadoPor String required
lidoPor String required
procedencia String required
retirada String required
codigoPlano String required
convenioPlano ConvenioPlano
observacao String required
}

enum Sexo {
FEMININO, MASCULINO, IGNORADO
}
enum TipoAmostra {
DOADOR, RECEPTOR
}
enum OrigemAmostra {
HUMANO, NAO_HUMANO
}
enum ConvenioPlano {
SUS_INTERNACAO, SUS_PLANOAMBULATORIO
}
enum FormaEnvio {
CORREIO, FAX
}
enum Raca {
BRANCA, PRETA, PARDA, AMARELA, INDIGENA
}
enum GrupoSanguineo {
O, A, B, AB, INDETERMINADO
}

relationship ManyToOne {
AtendimentoDiverso{laboratorio(nome)} to LaboratorioExterno
AtendimentoDiverso{controle(codigo)} to ControleQualidade
AtendimentoDiverso{cadaver(nome)} to Cadaver
}


dto * with mapstruct
paginate * with pagination
service * with serviceClass
search * with elasticsearch
skipClient *
